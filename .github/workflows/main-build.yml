##
# (c) 2021 - CloudopsWorks OÃœ - https://docs.cloudops.works/
#
name: Java Maven Build
on:
  # Run only on branches PUSH except when charts are modified
  push:
    branches:
      - master
    paths-ignore:
      - ".github/workflows/**"
  workflow_dispatch:
    
# Permission Settings for the entire RUN
permissions:
  actions: write
  contents: write
  issues: write
  packages: write
  statuses: write

jobs:
  build-release:
    uses: cloudopsworks/java8-app-template/.github/workflows/code-build.yml@master
    secrets:
      DOCKER_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
      BOT_USER: ${{ secrets.BOT_USER }}
      BOT_EMAIL: ${{ secrets.BOT_EMAIL }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      dockerRegistryUser: ${{ secrets.AZURE_SERVICE_ID }}
      dockerRegistryPassword: ${{ secrets.AZURE_SERVICE_SECRET }}
      helmRegistryUser: ${{ secrets.AZURE_SERVICE_ID }}
      helmRegistryPassword: ${{ secrets.AZURE_SERVICE_SECRET }}

  create-release:
    needs:
      - build-release
    uses: cloudopsworks/java8-app-template/.github/workflows/create-release.yml@master
    with:
      release-tag: ${{ needs.build-release.outputs.release_version }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

  static-analysis:
    runs-on: ubuntu-latest
    needs:
      - build-release
    steps:
      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
          ref: v${{ needs.build-release.outputs.release_version }}
      # Setup Java JDK for builds
      - name: Set JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "zulu"

      # Cache all maven packages
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the code!
      - name: Static Test Code
        env:
          JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms128m -Xmx2048m"
          SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}
          SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          mvn --batch-mode test
          mvn --batch-mode sonar:sonar -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN

  deploy-staging:
    runs-on: ubuntu-latest
    needs:
      - build-release
      - static-analysis
      - create-release
    steps:
      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
          ref: v${{ needs.build-release.outputs.release_version }}

      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "::set-output name=owner::$repo_owner"
          echo "::set-output name=repo_name::$repo_name"

      # Get pipeline conf
      - name: Get pipeline target environment
        id: get_env
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.cd.env' ./cloudopsworks-ci.yaml

      # Environment Determination
      - name: Find Target Environment
        id: target_env
        run: |
          ENV="${{ steps.get_env.outputs.result }}"
          if [[ "$ENV" == "" ]] ; then
            ENV="staging"
          fi
          echo "::set-output name=result::$ENV"

      # Build Payload script
      - name: Build Payload params
        id: params
        run: |
          payload="{\"promote\": {"
          payload="${payload}\"repositoryowner\": \"${{ steps.getowner.outputs.owner }}\""
          payload="${payload}, \"repository\": \"${{ steps.getowner.outputs.repo_name }}\""
          payload="${payload}, \"environment\": \"${{ steps.target_env.outputs.result }}\""
          payload="${payload}, \"version\": \"${{ needs.build-release.outputs.release_version }}\""
          payload="${payload}, \"releasename\": \"${{ steps.getowner.outputs.repo_name }}\""
          payload="${payload} } }"

          echo "::set-output name=payload::$payload"

      # Send event to repository to launch new promotion
      - name: Send Event to Environment Repository
        id: send_event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: "${{ secrets.BOT_TOKEN }}"
          repository: ${{ steps.getowner.outputs.owner }}/environment-${{ steps.getowner.outputs.owner }}-${{ steps.target_env.outputs.result }}
          event-type: promote-environment
          client-payload: '${{ steps.params.outputs.payload }}'

